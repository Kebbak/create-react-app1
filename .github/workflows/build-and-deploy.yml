name: Build & deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Install NPM packages
        run: npm i
        working-directory: ./my-app

      - name: Build project
        run: npm run build
        working-directory: ./my-app

      - name: Run tests
        run: npm run test -- --coverage --ci --watchAll=false
        working-directory: ./my-app

      - name: Upload production-ready build files
        uses: actions/upload-artifact@v4
        with:
          name: production-files
          path: ./my-app/build

  docker:
    name: Docker Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (test stage)
        uses: docker/build-push-action@v5
        with:
          context: ./my-app
          target: test
          push: false
          tags: my-react-app:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Docker image (production stage)
        uses: docker/build-push-action@v5
        with:
          context: ./my-app
          target: production
          push: false
          tags: my-react-app:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          # Start the container in detached mode
          docker run -d -p 8080:80 --name test-container my-react-app:latest
          
          # Wait for the container to be ready
          sleep 5
          
          # Test if the application is accessible
          curl -f http://localhost:8080 || exit 1
          
          # Check if it serves the React app
          curl -s http://localhost:8080 | grep -q "React App" || exit 1
          
          # Clean up
          docker stop test-container
          docker rm test-container

      - name: Save Docker image as artifact
        run: |
          docker save my-react-app:latest | gzip > my-react-app.tar.gz

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: my-react-app.tar.gz

  deploy:
    name: Deploy
    needs: [build, docker]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: production-files
          path: ./build

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build